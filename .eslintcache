[{"/Users/felipebuscaglia/Henry/finddevsfrontend/src/index.js":"1","/Users/felipebuscaglia/Henry/finddevsfrontend/src/reportWebVitals.js":"2","/Users/felipebuscaglia/Henry/finddevsfrontend/src/App.js":"3","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Store/index.js":"4","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Actions/index.js":"5","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Reducers/index.js":"6","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/Footer/Footer.jsx":"7","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/HeaderUser/HeaderUser.jsx":"8","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/Header/Header.jsx":"9","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/Homepage/Homepage.jsx":"10","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/PostStartup/ProjectSettings.jsx":"11","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobListing/JobListings.jsx":"12","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/StartupAdminPanel/StartupAdminPanel.jsx":"13","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/UserProfile/UserProfile.jsx":"14","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/WorkersList/WorkersList.jsx":"15","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/AddJob/AddJob.jsx":"16","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobInfo/JobInfo.jsx":"17","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/NotFound/NotFound.jsx":"18","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/Suggestions/Suggestions.jsx":"19","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/PostStartup/PostStartup.jsx":"20","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/ProjectProfile/ProjectProfile.jsx":"21","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/StartupAdminPanel/JobPanel/JobPanel.jsx":"22","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/EditUser/EditUser.jsx":"23","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/SuccessPage/SuccessPage.jsx":"24","/Users/felipebuscaglia/Henry/finddevsfrontend/src/utils.js":"25","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/HeaderUser/SearchBar.jsx":"26","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/PostStartup/UserSettingsCard.jsx":"27","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobListing/JobCardProfile.jsx":"28","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/PopUps/RegisterPopUp.jsx":"29","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/PopUps/Confirmation.jsx":"30","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/PopUps/LoginPopUp.jsx":"31","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/GoPremiumPopUp/GoPremium.jsx":"32","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/UserCard/ProjectCard.jsx":"33","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/UserCard/UserCardSearch.jsx":"34","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/UserCard/UserCard.jsx":"35","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ProfileProjectCard/ProfileProjectCard.jsx":"36","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/HirePopUp/HirePopUp.jsx":"37","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobListing/JobCard.jsx":"38","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ProjectCard/ProjectCard.jsx":"39","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ApplicantsPopUp/ApplicantsPopUp.jsx":"40","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/HirePopUp/JobCard.jsx":"41","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ApplicantsPopUp/MembersPopUp.jsx":"42","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ApplicantsPopUp/ApplicantsList.jsx":"43","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ApplicantsPopUp/Accepted.jsx":"44","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ApplicantsPopUp/ChangeRole.jsx":"45"},{"size":825,"mtime":1614823064498,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":1608134372834,"results":"48","hashOfConfig":"47"},{"size":4020,"mtime":1614565342883,"results":"49","hashOfConfig":"47"},{"size":337,"mtime":1614306632864,"results":"50","hashOfConfig":"47"},{"size":2149,"mtime":1614744428958,"results":"51","hashOfConfig":"47"},{"size":5229,"mtime":1614822404861,"results":"52","hashOfConfig":"47"},{"size":1091,"mtime":1614896837913,"results":"53","hashOfConfig":"47"},{"size":9658,"mtime":1614897827397,"results":"54","hashOfConfig":"47"},{"size":935,"mtime":1614896591122,"results":"55","hashOfConfig":"47"},{"size":3964,"mtime":1614887279006,"results":"56","hashOfConfig":"47"},{"size":10656,"mtime":1614904914658,"results":"57","hashOfConfig":"47"},{"size":3015,"mtime":1614686492476,"results":"58","hashOfConfig":"47"},{"size":4244,"mtime":1614899708957,"results":"59","hashOfConfig":"47"},{"size":7407,"mtime":1614822614792,"results":"60","hashOfConfig":"47"},{"size":5008,"mtime":1614711954813,"results":"61","hashOfConfig":"47"},{"size":7567,"mtime":1614904340017,"results":"62","hashOfConfig":"47"},{"size":4983,"mtime":1614900005996,"results":"63","hashOfConfig":"47"},{"size":571,"mtime":1614119831311,"results":"64","hashOfConfig":"47"},{"size":3463,"mtime":1614692044276,"results":"65","hashOfConfig":"47"},{"size":10298,"mtime":1614905628893,"results":"66","hashOfConfig":"47"},{"size":5756,"mtime":1614822604719,"results":"67","hashOfConfig":"47"},{"size":3381,"mtime":1614744747308,"results":"68","hashOfConfig":"47"},{"size":13038,"mtime":1614905573438,"results":"69","hashOfConfig":"47"},{"size":1228,"mtime":1614656358102,"results":"70","hashOfConfig":"47"},{"size":1094,"mtime":1614821815256,"results":"71","hashOfConfig":"47"},{"size":479,"mtime":1613675746365,"results":"72","hashOfConfig":"47"},{"size":1158,"mtime":1614822473639,"results":"73","hashOfConfig":"47"},{"size":2126,"mtime":1614744673657,"results":"74","hashOfConfig":"47"},{"size":4782,"mtime":1614905493254,"results":"75","hashOfConfig":"47"},{"size":1614,"mtime":1614744569864,"results":"76","hashOfConfig":"47"},{"size":2832,"mtime":1614897752466,"results":"77","hashOfConfig":"47"},{"size":5273,"mtime":1614744517843,"results":"78","hashOfConfig":"47"},{"size":999,"mtime":1614822248145,"results":"79","hashOfConfig":"47"},{"size":2793,"mtime":1614822377118,"results":"80","hashOfConfig":"47"},{"size":3775,"mtime":1614822356276,"results":"81","hashOfConfig":"47"},{"size":1270,"mtime":1614656358069,"results":"82","hashOfConfig":"47"},{"size":4978,"mtime":1614744550849,"results":"83","hashOfConfig":"47"},{"size":3839,"mtime":1614738827454,"results":"84","hashOfConfig":"47"},{"size":2501,"mtime":1614899557428,"results":"85","hashOfConfig":"47"},{"size":1246,"mtime":1614744475339,"results":"86","hashOfConfig":"47"},{"size":2582,"mtime":1614744561326,"results":"87","hashOfConfig":"47"},{"size":4603,"mtime":1614897665238,"results":"88","hashOfConfig":"47"},{"size":4459,"mtime":1614822566066,"results":"89","hashOfConfig":"47"},{"size":715,"mtime":1614887010245,"results":"90","hashOfConfig":"47"},{"size":1266,"mtime":1614905384412,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1sr660w",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/felipebuscaglia/Henry/finddevsfrontend/src/index.js",[],["193","194"],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/reportWebVitals.js",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/App.js",["195"],"import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport Homepage from './Screens/Homepage/Homepage';\nimport UserProfile from './Screens/UserProfile/UserProfile';\nimport Footer from './Components/Footer/Footer';\nimport HeaderUser from './Components/HeaderUser/HeaderUser';\nimport PostStartup from './Screens/PostStartup/PostStartup';\nimport ProjectProfile from './Screens/ProjectProfile/ProjectProfile';\nimport StartupAdminPanel from './Screens/StartupAdminPanel/StartupAdminPanel';\nimport JobPanel from './Screens/StartupAdminPanel/JobPanel/JobPanel';\nimport AddJob from './Screens/AddJob/AddJob';\nimport { connect } from 'react-redux';\nimport { setSkills, setUserInfo, setProjects, getUsers, getNotifications, getJobs } from './Actions/index';\nimport jwt from 'jsonwebtoken';\nimport JobListings from './Screens/JobListing/JobListings';\nimport SettingsPanel from './Screens/PostStartup/ProjectSettings';\nimport WorkersList from './Screens/WorkersList/WorkersList';\nimport JobInfo from './Screens/JobInfo/JobInfo';\nimport EditUser from './Screens/EditUser/EditUser';\nimport Suggestions from './Screens/Suggestions/Suggestions';\nimport NotFound from './Screens/NotFound/NotFound';\nimport SuccessPage from './Screens/SuccessPage/SuccessPage';\n\nfunction App({ setGlobalSkills, setUserInfo, setProjects, getUsers, getNotifications, getJobs }) {\n\n    useEffect(() => {\n        const user = jwt.decode(JSON.parse(localStorage.getItem('user')));\n        if (user) {\n            setUserInfo(user.username);\n            getNotifications(user.username);\n        }\n        setGlobalSkills();\n        setProjects();\n        getUsers();\n        getJobs();\n    }, [])\n\n    return (\n        <div>\n            <Route exact path='/' component={Header} />\n            <Route path='/' render={({ location }) => < HeaderUser pathname={location} />} />\n            <Switch>\n                <Route exact path='/' component={Homepage} />\n                <Route exact path='/jobs' component={JobListings} />\n                <Route exact path='/user/:username' render={({ match, location }) => < UserProfile pathname={location} username={match.params.username} />} />\n                <Route exact path='/project/post' component={PostStartup} />\n                <Route exact path='/project/profile/:projectId' render={({ match }) => < ProjectProfile projectID={match.params.projectId} />} />\n                <Route exact path='/admin/panel' component={StartupAdminPanel} />\n                <Route exact path='/project/jobPanel/:projectId' render={({ match }) => < JobPanel projectID={match.params.projectId} />} />\n                <Route exact path='/project/addJob/:projectId' render={({ match }) => < AddJob projectID={match.params.projectId} />} />\n                <Route exact path='/project/settings/:projectId' render={({ match }) => <SettingsPanel projectID={match.params.projectId} />} />\n                <Route exact path='/job/info/:jobId' render={({ match }) => < JobInfo jobID={match.params.jobId} />} />\n                <Route exact path='/edit/user/me' component={EditUser} />\n                <Route exact path='/workers' component={WorkersList} />\n                <Route exact path='/suggestions' render={({ location }) => <Suggestions pathname={location} />} />\n                <Route exact path='/success' component={SuccessPage} />\n                <NotFound />\n            </Switch>\n            <Route exact path='/' component={Footer} />\n        </div>\n    )\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setGlobalSkills: nothing => dispatch(setSkills()),\n        setUserInfo: username => dispatch(setUserInfo(username)),\n        setProjects: nothing => dispatch(setProjects()),\n        getUsers: nothing => dispatch(getUsers()),\n        getNotifications: username => dispatch(getNotifications(username)),\n        getJobs: nothing => dispatch(getJobs())\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(App);","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Store/index.js",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Actions/index.js",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Reducers/index.js",["196","197","198","199","200","201","202","203","204","205","206"],"const initialState = {\n    allSkills: [],\n    userInfo: {},\n    projects: [],\n    users: [],\n    jobs: [],\n    skillSelection: [],\n    jobSkillSelection: [],\n    filteredWorkers: [],\n    filteredJobs: [],\n    notifications: [],\n    limitOfPosts: false\n}\n\nfunction rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_GLOBAL_SKILLS':\n            return {\n                ...state,\n                allSkills: action.payload\n            }\n        case 'SET_USER_DATA':\n            const find = action.payload.projects.find (project => project.userXprojects.isFounder === true && !project.isDeleted && project.ownerId ===action.payload.id);\n            return {\n                ...state,\n                userInfo: action.payload,\n                limitOfPosts: find && !action.payload.isPremium ? true : false\n            }\n        case 'SET_PROJECTS':\n            return {\n                ...state,\n                projects: action.payload,\n            }\n        case 'GET_USERS':\n            return {\n                ...state,\n                users: action.payload,\n                filteredWorkers: action.payload\n            }\n        case 'GET_JOBS':\n            return {\n                ...state,\n                jobs: action.payload,\n                filteredJobs: action.payload\n            }\n        case 'REMOVE_FILTER':\n            const preFilteredSkills = state.skillSelection.filter(skill => skill.id !== action.payload.id);\n            if (preFilteredSkills.length > 0) {\n                var firstFilteredWorkers = [];\n                for (var i = 0; i < state.users.length; i++) {\n                    for (var j = 0; j < state.users[i].skills.length; j++) {\n                        if (state.users[i].skills[j].id === preFilteredSkills[0].id) firstFilteredWorkers.push(state.users[i]);\n                    }\n                }\n                for (var i = 1; i < preFilteredSkills.length; i++) {\n                    firstFilteredWorkers = firstFilteredWorkers.filter(worker => {\n                        for (var j = 0; j < worker.skills.length; j++) {\n                            if (worker.skills[j].id === preFilteredSkills[i].id) return worker;\n                        }\n                    })\n                }\n            }\n            return {\n                ...state,\n                skillSelection: preFilteredSkills,\n                filteredWorkers: preFilteredSkills.length > 0 ? firstFilteredWorkers : state.users\n            }\n\n        case 'REMOVE_JOB_FILTER':\n            const preFilteredJobSkills = state.jobSkillSelection.filter(skill => skill.id !== action.payload.id);\n            if (preFilteredJobSkills.length > 0) {\n                var firstFilteredJobs = [];\n                for (var i = 0; i < state.jobs.length; i++) {\n                    for (var j = 0; j < state.jobs[i].skills.length; j++) {\n                        if (state.jobs[i].skills[j].id === preFilteredJobSkills[0].id) firstFilteredJobs.push(state.jobs[i]);\n                    }\n                }\n                for (var i = 1; i < preFilteredJobSkills.length; i++) {\n                    firstFilteredJobs = firstFilteredJobs.filter(job => {\n                        for (var j = 0; j < job.skills.length; j++) {\n                            if (job.skills[j].id === preFilteredJobSkills[i].id) return job;\n                        }\n                    })\n                }\n            }\n            return {\n                ...state,\n                jobSkillSelection: preFilteredJobSkills,\n                filteredJobs: preFilteredJobSkills.length > 0 ? firstFilteredJobs : state.jobs\n            }\n\n        case 'SELECT_WORKERS':\n            var filteredArray = state.filteredWorkers.map(worker => {\n                for (var i = 0; i < worker.skills.length; i++) {\n                    if (worker.skills[i].label === action.payload.label) return worker;\n                }\n            });\n            filteredArray = filteredArray.filter(worker => worker !== undefined);\n            filteredArray = filteredArray.sort((a, b) => {\n                return b.isPremium - a.isPremium\n            })\n            const found = state.allSkills.find(skill => skill.id === action.payload.id);\n            return {\n                ...state,\n                filteredWorkers: filteredArray,\n                skillSelection: state.skillSelection.concat(found)\n            }\n\n        case 'FILTER_JOBS':\n            var filteredArray = state.filteredJobs.map(job => {\n                for (var i = 0; i < job.skills.length; i++) {\n                    if (job.skills[i].label === action.payload.label) return job;\n                }\n            });\n            filteredArray = filteredArray.filter(job => job !== undefined);\n            const skillFound = state.allSkills.find(skill => skill.id === action.payload.id);\n            return {\n                ...state,\n                filteredJobs: filteredArray,\n                jobSkillSelection: state.jobSkillSelection.concat(skillFound)\n            }\n\n        case 'GET_NOTIFICATIONS':\n            return {\n                ...state,\n                notifications: action.payload\n            }\n\n        default: return state\n    }\n}\n\n\nexport default rootReducer;","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/Footer/Footer.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/HeaderUser/HeaderUser.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/Header/Header.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/Homepage/Homepage.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/PostStartup/ProjectSettings.jsx",["207","208","209"],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobListing/JobListings.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/StartupAdminPanel/StartupAdminPanel.jsx",["210"],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/UserProfile/UserProfile.jsx",["211"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport style from './UserProfile.module.css';\nimport { Link } from 'react-router-dom';\nimport jwt from 'jsonwebtoken';\nimport HirePopUp from '../../Components/HirePopUp/HirePopUp';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ProjectCard from '../../Components/ProfileProjectCard/ProfileProjectCard';\nimport Loading from '../../Media/Loading.gif';\nimport EmptyUser from '../../Media/EmptyUserProfile.svg';\n\nfunction UserProfile({ username, pathname }) {\n\n    const [user, setUser] = useState({});\n    const [isUser, setIsUser] = useState(false)\n    const [color, setColor] = useState(null);\n    const [hasWorked, setHasWorked] = useState(false);\n    const [hasCreated, setHasCreated] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [noUser, setNoUser] = useState(false);\n\n    useEffect(() => {\n        const usuario = jwt.decode(JSON.parse(localStorage.getItem('user')));\n        if (!usuario) setNoUser(true);\n        axios.get(`/users/${username}`)\n            .then(res => {\n                if (res.data === null) window.location.replace('/error');\n                setUser(res.data);\n                setColor(res.data.color);\n                var userProjects = {};\n                if (res.data.projects.find(project => project.userXprojects.isFounder === true)) userProjects.own = true;\n                if (res.data.projects.find(project => project.userXprojects.isFounder === false)) userProjects.joined = true;\n                setHasCreated (userProjects);\n                if (usuario && usuario.username === res.data.username) setIsUser(true);\n                if (pathname.search === \"?verify\" && usuario && usuario.username !== res.data.username) setHasWorked(true);\n                setLoading(false);\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    function validateSkill(skill) {\n        if (hasWorked) {\n            axios.post(`/skills/${username}/validate`, { skill: skill.label })\n                .then(res => window.location.reload())\n                .catch(err => console.log(err))\n        }\n    }\n\n    const BlueOnGreenTooltip = withStyles({\n        tooltip: {\n            color: \"white\",\n            backgroundColor: \"#181a19\",\n            fontFamily: 'Nunito',\n            fontSize: '12px'\n        }\n    })(Tooltip);\n\n    return (\n        <div>\n            {loading ?\n                <img alt=\"Suggestions GIF\" id={style.loading} src={Loading} /> :\n                <div>\n                    <div id={style.cover} style={{ backgroundColor: color }}></div>\n                    <div className='displayFlexColumn' id='alignItemsCenter'>\n                        <div id={style.socialMediaDiv} style={{ color: color }}>\n                            {isUser ? <Link className='link' to='/edit/user/me'><button style={{ background: color, color: user.brightness === 'bright' ? '#fff' : '#000' }} id={style.btn}>UPDATE PROFILE</button></Link> : noUser ? null : <HirePopUp applicantsNotifications={user.notifications} applicantUsername={user.username} color={color} />}\n                            {user.gitHub && <a target='_blank' rel=\"noreferrer\" href={user.gitHub} style={{ textDecoration: 'none', color: color }}><i class=\"fab fa-github-square\"></i></a>}\n                            {user.linkedIn && <a target='_blank' rel=\"noreferrer\" href={user.linkedIn} style={{ textDecoration: 'none', color: color }}><i class=\"fab fa-linkedin\"></i></a>}\n                            {user.twitter && <a target='_blank' rel=\"noreferrer\" href={user.twitter} style={{ textDecoration: 'none', color: color }}><i class=\"fab fa-twitter-square\"></i></a>}\n                        </div>\n                        <div style={{ border: `10px solid ${color}`, alignSelf: 'center', backgroundImage: `url(${user.profilePic})` }} id={style.profilePic}></div>\n                        <h3 className='font800'><span style={{ color: color }}>@ </span>{user.username}</h3>\n                        <span id={style.description}>{user.description}</span>\n                        <div id={style.datadiv}>\n                            {user.region && user.country ?\n                                <span>{user.region && user.country && `📍 ${user.region}, ${user.country}`}</span> :\n                                null\n                            }\n                            <div id={style.skillDiv}>\n                                {user.skills && user.skills.map(skill =>\n                                    hasWorked ?\n                                        <BlueOnGreenTooltip key={skill.user_skills.id} title={skill.user_skills.isValidated ? 'Already validated!' : `Validate @${username}'s skill!`}>\n                                            <div style={{ background: skill.strongColor, color: skill.softColor }} id={style.skillBtn} onClick={() => validateSkill(skill)}>\n                                                <span>{hasWorked && !skill.user_skills.isValidated && <i class=\"fas fa-plus-circle\"></i>} {skill.user_skills.isValidated ? <i class=\"fas fa-check-circle\"></i> : null} {skill.label}</span>\n                                            </div>\n                                        </BlueOnGreenTooltip> :\n                                        <div style={{ background: skill.strongColor, color: skill.softColor }} id={style.skillBtn} onClick={() => validateSkill(skill)}>\n                                            <span>{hasWorked && !skill.user_skills.isValidated && <i class=\"fas fa-plus-circle\"></i>} {skill.user_skills.isValidated ? <i class=\"fas fa-check-circle\"></i> : null} {skill.label}</span>\n                                        </div>\n                                )}\n                            </div>\n                        </div>\n                        {hasCreated.own && <div className={style.projectDiv}>\n                            <h3 className='font800'>🧑‍💻 Projects created</h3>\n                            <div id={style.mainProjectDiv}>\n                                {user.projects && user.projects.map(project => project.userXprojects.isFounder ? <ProjectCard key={project.id} isFounder={true} project={project} /> : null)}\n                            </div>\n                        </div>}\n                        {hasCreated.joined && <div className={style.projectDiv}>\n                            <h3 className='font800'>🤝 Project joined</h3>\n                            <div id={style.mainProjectDiv}>\n                                {user.projects && user.projects.map(project => !project.userXprojects.isFounder ? <ProjectCard key={project.id} project={project} /> : null)}\n                            </div>\n                        </div>}\n                        {user.projects.length === 0 &&\n                            <div style={{ background: color, color: user.brightness === 'bright' ? '#fff' : '#000' }} id={style.emptyDiv}>\n                                <img alt=\"No project to display\" id={style.empty} src={EmptyUser} />\n                                <h1 id={style.emptyTitle}>{isUser ? \"You haven't joined or created any project.\" : \"This developer hasn't joined or created any project.\"}</h1>\n                            </div>}\n                    </div>\n                </div>}\n        </div>\n    )\n}\n\nexport default UserProfile;","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/WorkersList/WorkersList.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/AddJob/AddJob.jsx",["212","213"],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobInfo/JobInfo.jsx",["214"],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/NotFound/NotFound.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/Suggestions/Suggestions.jsx",["215"],"import React, { useState, useLayoutEffect } from 'react';\nimport style from '../WorkersList/WorkersList.module.css';\nimport { connect } from 'react-redux';\nimport Loading from '../../Media/Loading.gif';\nimport UserCardSearch from '../../Components/UserCard/UserCardSearch';\nimport ProjectCard from '../../Components/UserCard/ProjectCard';\nimport { findSuggestions } from '../../utils';\nimport Empty from '../../Media/NotFoundSearch.svg';\nimport Cover from '../../Media/searchCover.jpg';\n\nfunction Suggestions({ pathname, users, projects }) {\n\n    const [loading, setLoading] = useState(true);\n    const [suggestions, setSuggestions] = useState({});\n\n    useLayoutEffect(() => {\n        const allProjectsAndUsers = projects.concat(users);\n        setSuggestions(findSuggestions(allProjectsAndUsers, pathname.search));\n        setTimeout(() => {\n            setLoading (false);\n        }, 2000)\n    }, [users])\n\n\n    function search(e) {\n        setLoading(true);\n        if (e.keyCode === 13) {\n            const allProjectsAndUsers = projects.concat(users);\n            setSuggestions(findSuggestions(allProjectsAndUsers, `?${e.target.value}`));\n        }\n        setLoading(false);\n    }\n\n    return (\n        <div>\n            <div id={style.mainImage} style={{ backgroundImage: `url(${Cover})`}}>\n                <div id={style.searchDiv}>\n                    <i class=\"fas fa-search\"></i>\n                    <input onKeyDown={(e) => search(e)} placeholder='Search for projects or users' id={style.searchInput} />\n                </div>\n            </div>\n            {loading ? <img alt=\"Loading GIF\" id={style.suggestionsLoading} src={Loading} /> :\n                <div>\n                    {suggestions.projects.length > 0 && <div className='displayFlexColumn' id='alignItemsCenter'>\n                        <div className='displayFlex' id='alignItemsCenter'>\n                            <h1 className='font800'>Projects ({suggestions.projects.length})</h1>\n                        </div>\n                        <div id={style.userCards}>\n                            {suggestions.projects.map(project => <ProjectCard key={project.id} project={project} />)}\n                        </div>\n                    </div>}\n                    {suggestions.users.length > 0 && <div className='displayFlexColumn' id='alignItemsCenter'>\n                        <div className='displayFlex' id='alignItemsCenter'>\n                            <h1 className='font800'>Developers ({suggestions.users.length})</h1>\n                        </div>\n                        <div id={style.userCards}>\n                            {suggestions.users.map(user => <UserCardSearch key={user.id} user={user} />)}\n                        </div>\n                    </div>}\n                    {suggestions.projects.length === 0 && suggestions.users.length === 0 &&\n                        <div className='justifyCenter' id='alignItemsCenter'>\n                            <img alt=\"No suggestions found\" src={Empty} id={style.empty} />\n                            <div>\n                                <h1 style={{ marginBottom: '25px' }} className='font800'>Oops... nothing was found.</h1>\n                            </div>\n                        </div>}\n                </div>}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        users: state.users,\n        projects: state.projects\n    }\n}\n\nexport default connect(mapStateToProps, null)(Suggestions);","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/PostStartup/PostStartup.jsx",["216","217","218"],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/ProjectProfile/ProjectProfile.jsx",["219"],"import React, { useEffect, useState } from 'react';\nimport style from './ProjectProfile.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport JobCard from '../JobListing/JobCardProfile';\nimport Loading from '../../Media/Loading.gif';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nfunction ProjectProfile({ projectID, user }) {\n\n    const [project, setProject] = useState({});\n    const [hasUpvoted, setHasUpvoted] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    const BlueOnGreenTooltip = withStyles({\n        tooltip: {\n            color: \"white\",\n            backgroundColor: \"#181a19\",\n            fontFamily: 'Nunito',\n            fontSize: '12px'\n        },\n        arrow: {\n            color: \"#181a19\"\n        }\n    })(Tooltip);\n\n    useEffect(() => {\n        axios.get(`/projects/${projectID}`)\n            .then(project => {\n                setProject(project.data);\n                setLoading(false);\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    function modifyUpvotes() {\n        const updatedUpvotes = { upvotes: project.upvotes + 1 };\n        axios.patch(`/projects/${project.id}`, updatedUpvotes)\n            .then(res => {\n                setProject({ ...project, upvotes: project.upvotes + 1 });\n                setHasUpvoted(true);\n            })\n            .catch(err => console.log(err))\n    }\n\n    if (loading) {\n        return (\n            <img alt=\"Loading GIF\" id={style.loading} src={Loading} />\n        )\n    }\n\n    return (\n        <div className='displayFlexColumn'>\n            <div style={{ background: project.mainColor }} id={style.cover}></div>\n            <div id={style.presentDiv}>\n                <div id={style.socialMediaDiv}>\n                    {hasUpvoted || project.isDeleted ? <button style={{ display: project.isDeleted ? 'none' : 'inline', background: project.mainColor, color: project.brightness === 'bright' ? '#fff' : '#000' }} id={style.upvoteBtn}><i class=\"fas fa-check-circle\"></i></button> : <button onClick={modifyUpvotes} style={{ background: project.mainColor, color: project.brightness === 'bright' ? '#fff' : '#000' }} id={style.upvoteBtn}><i class=\"fas fa-rocket\"></i> Upvote | {project.upvotes}</button>}\n                    {project.productHunt && <a href={project.productHunt} target='blank' rel=\"noreferrer\" style={{ textDecoration: 'none', color: project.mainColor }}><i class=\"fab fa-product-hunt\"></i></a>}\n                    {project.twitter && <a href={project.twitter} target='blank' rel=\"noreferrer\" style={{ textDecoration: 'none', color: project.mainColor }}><i class=\"fab fa-twitter-square\"></i></a>}\n                    {project.linkedIn && <a href={project.linkedIn} target='blank' rel=\"noreferrer\" style={{ textDecoration: 'none', color: project.mainColor }}><i class=\"fab fa-linkedin\"></i></a>}\n                    {project.website && <a href={project.website} target='blank' rel=\"noreferrer\" style={{ textDecoration: 'none', color: project.mainColor }}><i class=\"fas fa-globe\"></i></a>}\n                </div>\n                <div id={style.projectLogo}><img alt=\"Project logo\" src={project.logo} id={style.logo} /></div>\n                <h1 id={style.projectName}>{project.name} {project.isDeleted && <BlueOnGreenTooltip title='This project has been closed by its founders.' arrow><span id={style.closedSpan}>CLOSED</span></BlueOnGreenTooltip>}</h1>\n                <span id={style.oneLineDescription}>{project.oneLineDescription}</span>\n            </div>\n            <div id={style.aboutDiv} style={{ background: project.mainColor }}>\n                <h1 className='font600'>About</h1>\n                <p className='font200' style={{ color: project.brightness === 'bright' ? '#fff' : '#000', fontSize: '17px' }}>{project.description}</p>\n            </div>\n            <div className='displayFlexColumn' id='alignItemsCenter'>\n                <h2 className='font800'>Members</h2>\n                <div id={style.mainUserDiv}>\n                    {project.users && project.users.map(user =>\n                        user.userXprojects.endDate === null ?\n                            <div key={user.id} style={{ background: user.color, color: user.brightness === 'bright' ? '#fff' : '#000' }} id={style.userDiv}>\n                                <img alt=\"Profile\" src={user.profilePic} id={style.profilePic} />\n                                <div className='displayFlexColumn' id='alignItemsCenter'>\n                                    <h5 className='font800'>@ {user.username}</h5>\n                                    <span id={style.lowEnphasis}>{user.userXprojects.role}</span>\n                                </div>\n                                <Link to={`/user/${user.username}`}>\n                                    <button style={{ color: user.brightness === 'bright' ? '#fff' : '#000', border: user.brightness === 'bright' ? '2px solid #fff' : '2px solid #000' }} id={style.contactBtn}>Contact</button>\n                                </Link>\n                            </div> :\n                            null\n                    )}\n                </div>\n            </div>\n            {project.jobOpportunities && project.jobOpportunities.length > 0 &&\n                <div id={style.mainJobDiv}>\n                    <h2 className='font800'>Join {project.name}</h2>\n                    {project.jobOpportunities.map(job => <JobCard key={job.id} project={project} job={job} />)}\n                </div>}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.userInfo\n    }\n}\n\nexport default connect(mapStateToProps, null)(ProjectProfile);","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/StartupAdminPanel/JobPanel/JobPanel.jsx",["220"],"import React, { useLayoutEffect, useState } from 'react';\nimport style from './JobPanel.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport JobCard from '../../JobListing/JobCardProfile';\nimport Empty from '../../../Media/emptyJob.svg';\nimport Loading from '../../../Media/Loading.gif';\nimport jwt from 'jsonwebtoken';\nimport { setUserInfo } from '../../../Actions/index';\nimport { connect } from 'react-redux';\n\nfunction JobPanel({ projectID, setUserInfo, user }) {\n    const [project, setProject] = useState({});\n    const [loading, setLoading] = useState (true);\n\n    async function asyncUseEffect(username, userId) {\n        await (setUserInfo(username));\n        try {\n            const projectData = await axios.get(`/projects/${projectID}`);\n            const userFound = await projectData.data.users.find(member => member.id === userId);\n            if (!userFound || userFound.userXprojects.isFounder === false || projectData.data.isDeleted) window.location.replace('/error');\n            setProject(projectData.data);\n            setTimeout(() => {\n                setLoading(false);\n            }, 1000)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    useLayoutEffect(() => {\n        const user = jwt.decode(JSON.parse(localStorage.getItem('user')))\n        if (user) {\n            asyncUseEffect(user.username, user.id);\n        } else window.location.replace ('/error');\n    }, [])\n\n    if (loading) {\n        return (\n            <img alt=\"Loading GIF\" src={Loading} id={style.loading} />\n        )\n    }\n\n    return (\n        <div className='displayFlex'>\n            <div id={style.fixedDiv}>\n                <div id={style.logoDiv}>\n                    <Link to={`/project/profile/${projectID}`}><img alt=\"Project logo\" src={project.logo} id={style.invertedLogo} /></Link>\n                </div>\n                <Link id={style.link} to={`/admin/panel`}><span className='font200'><i class=\"fas fa-door-open\"></i> Back to Admin Panel</span></Link>\n            </div>\n            {project.jobOpportunities && project.jobOpportunities.length > 0 ?\n                <div id={style.secondDiv}>\n                    <h1 className='font800'>Job Panel</h1>\n                    <div id={style.jobDiv}>\n                        {project.jobOpportunities && project.jobOpportunities.map(job => <JobCard key={job.id} isJobPanel={true} project={project} job={job} />)}\n                    </div>\n                    <Link className='links' to={`/project/addJob/${projectID}`}><span id={style.addBtn}>Post a job</span></Link>\n                </div> :\n                <div id={style.emptyDiv}>\n                    <img alt=\"No jobs posted\" src={Empty} id={style.empty} />\n                    <div id={style.innerEmptyDiv}>\n                        <h1 style={{ marginBottom: '25px' }} className='font800'>No jobs posted.</h1>\n                        <Link className='links' to={`/project/addJob/${projectID}`}><span id={style.addBtn2}>Post a job</span></Link>\n                    </div>\n                </div>}\n        </div>\n    )\n}\n\nfunction mapStateToProps (state) {\n    return {\n        user: state.userInfo\n    }\n} \n\nfunction mapDispatchToProps (dispatch) {\n    return {\n        setUserInfo: username => dispatch(setUserInfo(username))\n    }\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps)(JobPanel);","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/EditUser/EditUser.jsx",["221","222","223","224","225"],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/SuccessPage/SuccessPage.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/utils.js",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/HeaderUser/SearchBar.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/PostStartup/UserSettingsCard.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobListing/JobCardProfile.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/PopUps/RegisterPopUp.jsx",["226","227"],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/PopUps/Confirmation.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/PopUps/LoginPopUp.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/GoPremiumPopUp/GoPremium.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/UserCard/ProjectCard.jsx",["228"],"import React from 'react';\nimport style from './UserCard.module.css';\nimport { Link } from 'react-router-dom';\nimport Verification from '../../Media/Verification.png';\n\nfunction ProjectCard({ project }) {\n    return (\n        <div id={style.projectCard}>\n            <div id='alignItemsCenter' className='displayFlexColumn'>\n                <img alt=\"Project logo\" id={style.profilePic} src={project.logo} />\n                <div className='displayFlex' id='alignItemsCenter'>\n                    <span id={style.projectName} className='font800'>{project.name}</span>\n                    {project.isPremium && <img src={Verification} id={style.verification} />}\n                </div>\n                <p id={style.bio}>{project.oneLineDescription}</p>\n            </div>\n            <Link style={{ width: '100%' }} to={`/project/profile/${project.id}`}><button id={style.btn} style={{ background: project.mainColor }}>Go to profile</button></Link>\n        </div>\n    )\n}\n\nexport default ProjectCard;","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/UserCard/UserCardSearch.jsx",["229"],"import React, { useEffect, useState } from 'react';\nimport style from './UserCard.module.css';\nimport Verification from '../../Media/Verification.png';\nimport { Link } from 'react-router-dom';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n    arrow: { color: \"#181a19\" }\n}));\n\nfunction UserCardSearch({ user }) {\n    const [extraSkills, setExtraSkills] = useState(null);\n    const [ESL, setESL] = useState(0);\n\n    useEffect(() => {\n        if (user.skills) {\n            const reduced = user.skills.slice(8).reduce((acc, curr, index) => index === user.skills.slice(8).length - 1 ? acc + curr.label : acc + `${curr.label}, `, '');\n            setExtraSkills(reduced);\n            setESL(user.skills.slice(8).length);\n        }\n    }, [])\n\n    const classes = useStyles();\n\n    const BlueOnGreenTooltip = withStyles({\n        tooltip: {\n            color: \"white\",\n            backgroundColor: \"#181a19\",\n            fontFamily: 'Nunito',\n            fontSize: '12px'\n        }\n    })(Tooltip);\n\n    return (\n        <div id={style.userCard}>\n            <div id='alignItemsCenter' className='displayFlexColumn'>\n                <img alt=\"Profile\" id={style.profilePic} src={user.profilePic} />\n                <div className='displayFlex' id='alignItemsCenter'>\n                    <span className='font800'><span style={{ color: user.color }}>@ </span>{user.username}</span>\n                    {user.isPremium && <img alt=\"Verification badge\" id={style.verification} src={Verification} />}\n                </div>\n            </div>\n            <p id={style.bio}>{user.description}</p>\n            <div className='justifyCenter' style={{ flexWrap: 'wrap' }}>\n                {user.skills && user.skills.slice(0, 8).map(skill =>\n                    <div key={skill.id} id={style.skillDiv}>\n                        <span\n                            style={{ background: `${skill.strongColor}`, color: skill.softColor }}\n                            id={style.skillSpan}>\n                            {skill.user_skills.isValidated && <i style={{ marginRight: '5px' }} class=\"fas fa-check-circle\"></i>}{skill.label}\n                        </span>\n                    </div>\n                )}\n                {extraSkills &&\n                    <BlueOnGreenTooltip classes={{ arrow: classes.arrow }} id={style.tooltip} title={extraSkills} arrow>\n                        <span id={style.plusSearch}>+{ESL}</span>\n                    </BlueOnGreenTooltip>}\n            </div>\n            <Link style={{ width: '100%' }} to={`/user/${user.username}`}><button id={style.btn} style={{ background: user.color }}>Contact</button></Link>\n        </div>\n    )\n}\n\nexport default UserCardSearch;","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/UserCard/UserCard.jsx",["230"],"import React, { useState, useEffect } from 'react';\nimport style from './UserCard.module.css';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Verification from '../../Media/Verification.png';\nimport { selectWorkers } from '../../Actions/index';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    arrow: { color: \"#181a19\" }\n}));\n\nfunction UserCard({ user, setLoading, selectWorkers, skillSelection }) {\n\n    const [extraSkills, setExtraSkills] = useState(null);\n    const [extraSkillsLength, setExtraLength] = useState(0);\n\n    useEffect(() => {\n        if (user.skills) {\n            const reduced = user.skills.slice(8).reduce((acc, curr, index) => index === user.skills.slice(8).length - 1 ? acc + curr.label : acc + `${curr.label}, `, '');\n            setExtraSkills(reduced);\n            setExtraLength(user.skills.slice(8).length);\n        }\n    }, [])\n\n    const classes = useStyles();\n\n    const BlueOnGreenTooltip = withStyles({\n        tooltip: {\n            color: \"white\",\n            backgroundColor: \"#181a19\",\n            fontFamily: 'Nunito',\n            fontSize: '12px'\n        }\n    })(Tooltip);\n\n    function addSkill (skill) {\n        setLoading (true);\n        const dontRepeat = skillSelection.find (filtered => filtered.id === skill.id);\n        if (!dontRepeat) selectWorkers(skill);\n        setLoading (false);\n    }\n\n    return (\n        <div id={style.userCard}>\n            <div className='displayFlexColumn' id='alignItemsCenter'>\n                <img alt=\"Profile\" id={style.profilePic} src={user.profilePic} />\n                <div id='alignItemsCenter' className='displayFlex'>\n                    <span className='font800' style={{ alignSelf: 'flex-start' }}><span style={{ color: user.color }}>@ </span>{user.username}</span>\n                    {user.isPremium && <img alt=\"Verification badge\" id={style.verification} src={Verification} />}\n                </div>\n                <p id={style.bio}>{user.description}</p>\n            </div>\n            <div id='alignItemsCenter' className='justifyCenter' style={{ flexWrap: 'wrap' }}>\n                {user.skills && user.skills.slice(0, 8).map(skill =>\n                    <div key={skill.id} id={style.skillDiv}>\n                        <BlueOnGreenTooltip classes={{ arrow: classes.arrow }} id={style.tooltip} title='Add tag to filters' arrow>\n                            <span\n                                onClick={() => { addSkill (skill) }}\n                                style={{ background: `${skill.strongColor}`, color: skill.softColor }}\n                                id={style.skillSpan}>\n                                {skill.user_skills.isValidated && <i style={{ marginRight: '5px' }} class=\"fas fa-check-circle\"></i>}{skill.label}\n                            </span>\n                        </BlueOnGreenTooltip>\n                    </div>\n                )}\n                {extraSkills &&\n                    <BlueOnGreenTooltip classes={{ arrow: classes.arrow }} id={style.tooltip} title={extraSkills} arrow>\n                        <span id={style.plus}>+{extraSkillsLength}</span>\n                    </BlueOnGreenTooltip>}\n            </div>\n            <Link id={style.link} to={`/user/${user.username}`}><button id={style.btn} style={{ background: user.color }}>Contact</button></Link>\n        </div>\n    )\n}\n\nfunction mapStateToProps (state) {\n    return {\n        skillSelection: state.skillSelection\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        selectWorkers: skill => dispatch(selectWorkers(skill))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCard);","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ProfileProjectCard/ProfileProjectCard.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/HirePopUp/HirePopUp.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobListing/JobCard.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ProjectCard/ProjectCard.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ApplicantsPopUp/ApplicantsPopUp.jsx",["231"],"import React, { useEffect, useState } from 'react';\nimport Popup from 'reactjs-popup';\nimport style from './ApplicantsPopUp.module.css';\nimport axios from 'axios';\nimport ApplicantsList from './ApplicantsList';\nimport Accepted from './Accepted';\n\nfunction ApplicantsPopUp({ job, projectName, brightness, projectLogo }) {\n\n    const [applicants, setApplicants] = useState([]);\n    const [decided, setDecided] = useState(null);\n\n    useEffect(() => {\n        axios.get(`/jobs/${job.id}/applicants`)\n            .then(applicantes => setApplicants(applicantes.data))\n            .catch(err => console.log(err))\n    }, [])\n\n    return (\n        <Popup trigger={<span style={{ color: brightness === 'bright' ? '#000' : '#fff', background: brightness === 'bright' ? '#fff' : '#000' }} id={style.editBtn}>Applicants</span>} modal>\n            {close => (\n                <div id={style.mainDiv}>\n                    {decided ? <Accepted decided={decided} projectName={projectName} /> : <ApplicantsList projectLogo={projectLogo} job={job} projectName={projectName} applicants={applicants} close={close} setApplicants={setApplicants} setDecided={setDecided} />}\n                </div>\n            )}\n        </Popup>\n    )\n}\n\nexport default ApplicantsPopUp","/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/HirePopUp/JobCard.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ApplicantsPopUp/MembersPopUp.jsx",["232"],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ApplicantsPopUp/ApplicantsList.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ApplicantsPopUp/Accepted.jsx",[],"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ApplicantsPopUp/ChangeRole.jsx",[],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":37,"column":8,"nodeType":"239","endLine":37,"endColumn":10,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":55,"column":26,"nodeType":"243","messageId":"244","endLine":55,"endColumn":27},{"ruleId":"245","severity":1,"message":"246","line":56,"column":72,"nodeType":"247","messageId":"248","endLine":60,"endColumn":22},{"ruleId":"249","severity":1,"message":"250","line":56,"column":79,"nodeType":"247","messageId":"251","endLine":56,"endColumn":81},{"ruleId":"241","severity":1,"message":"242","line":73,"column":26,"nodeType":"243","messageId":"244","endLine":73,"endColumn":27},{"ruleId":"241","severity":1,"message":"252","line":74,"column":30,"nodeType":"243","messageId":"244","endLine":74,"endColumn":31},{"ruleId":"241","severity":1,"message":"242","line":78,"column":26,"nodeType":"243","messageId":"244","endLine":78,"endColumn":27},{"ruleId":"245","severity":1,"message":"246","line":79,"column":66,"nodeType":"247","messageId":"248","endLine":83,"endColumn":22},{"ruleId":"249","severity":1,"message":"250","line":79,"column":70,"nodeType":"247","messageId":"251","endLine":79,"endColumn":72},{"ruleId":"249","severity":1,"message":"253","line":93,"column":66,"nodeType":"247","messageId":"251","endLine":93,"endColumn":68},{"ruleId":"241","severity":1,"message":"254","line":110,"column":17,"nodeType":"243","messageId":"244","endLine":110,"endColumn":30},{"ruleId":"249","severity":1,"message":"253","line":110,"column":60,"nodeType":"247","messageId":"251","endLine":110,"endColumn":62},{"ruleId":"237","severity":1,"message":"255","line":48,"column":8,"nodeType":"239","endLine":48,"endColumn":10,"suggestions":"256"},{"ruleId":"257","severity":1,"message":"258","line":57,"column":54,"nodeType":"259","messageId":"260","endLine":57,"endColumn":55,"suggestions":"261"},{"ruleId":"257","severity":1,"message":"258","line":57,"column":107,"nodeType":"259","messageId":"260","endLine":57,"endColumn":108,"suggestions":"262"},{"ruleId":"237","severity":1,"message":"263","line":40,"column":8,"nodeType":"239","endLine":40,"endColumn":14,"suggestions":"264"},{"ruleId":"237","severity":1,"message":"265","line":40,"column":8,"nodeType":"239","endLine":40,"endColumn":10,"suggestions":"266"},{"ruleId":"237","severity":1,"message":"263","line":41,"column":8,"nodeType":"239","endLine":41,"endColumn":10,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":122,"column":41,"nodeType":"259","messageId":"270","endLine":124,"endColumn":60},{"ruleId":"237","severity":1,"message":"271","line":40,"column":8,"nodeType":"239","endLine":40,"endColumn":14,"suggestions":"272"},{"ruleId":"237","severity":1,"message":"273","line":22,"column":8,"nodeType":"239","endLine":22,"endColumn":15,"suggestions":"274"},{"ruleId":"237","severity":1,"message":"275","line":39,"column":8,"nodeType":"239","endLine":39,"endColumn":22,"suggestions":"276"},{"ruleId":"257","severity":1,"message":"258","line":48,"column":54,"nodeType":"259","messageId":"260","endLine":48,"endColumn":55,"suggestions":"277"},{"ruleId":"257","severity":1,"message":"258","line":48,"column":107,"nodeType":"259","messageId":"260","endLine":48,"endColumn":108,"suggestions":"278"},{"ruleId":"237","severity":1,"message":"279","line":36,"column":8,"nodeType":"239","endLine":36,"endColumn":10,"suggestions":"280"},{"ruleId":"237","severity":1,"message":"263","line":36,"column":8,"nodeType":"239","endLine":36,"endColumn":10,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":6,"column":43,"nodeType":"243","messageId":"284","endLine":6,"endColumn":60},{"ruleId":"237","severity":1,"message":"263","line":60,"column":8,"nodeType":"239","endLine":60,"endColumn":14,"suggestions":"285"},{"ruleId":"257","severity":1,"message":"286","line":87,"column":24,"nodeType":"259","messageId":"260","endLine":87,"endColumn":25,"suggestions":"287"},{"ruleId":"257","severity":1,"message":"258","line":91,"column":54,"nodeType":"259","messageId":"260","endLine":91,"endColumn":55,"suggestions":"288"},{"ruleId":"257","severity":1,"message":"258","line":91,"column":107,"nodeType":"259","messageId":"260","endLine":91,"endColumn":108,"suggestions":"289"},{"ruleId":"257","severity":1,"message":"286","line":17,"column":25,"nodeType":"259","messageId":"260","endLine":17,"endColumn":26,"suggestions":"290"},{"ruleId":"291","severity":1,"message":"292","line":81,"column":113,"nodeType":"293","endLine":81,"endColumn":145},{"ruleId":"294","severity":1,"message":"295","line":13,"column":43,"nodeType":"296","endLine":13,"endColumn":93},{"ruleId":"237","severity":1,"message":"297","line":22,"column":8,"nodeType":"239","endLine":22,"endColumn":10,"suggestions":"298"},{"ruleId":"237","severity":1,"message":"299","line":25,"column":8,"nodeType":"239","endLine":25,"endColumn":10,"suggestions":"300"},{"ruleId":"237","severity":1,"message":"301","line":17,"column":8,"nodeType":"239","endLine":17,"endColumn":10,"suggestions":"302"},{"ruleId":"237","severity":1,"message":"279","line":22,"column":8,"nodeType":"239","endLine":22,"endColumn":10,"suggestions":"303"},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getJobs', 'getNotifications', 'getUsers', 'setGlobalSkills', 'setProjects', and 'setUserInfo'. Either include them or remove the dependency array. If 'setGlobalSkills' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["306"],"no-redeclare","'i' is already defined.","Identifier","redeclared","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'j' is already defined.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'filteredArray' is already defined.","React Hook useEffect has missing dependencies: 'asyncUseEffect', 'projectID', 'user.id', and 'user.username'. Either include them or remove the dependency array.",["307"],"no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["308","309"],["310","311"],"React Hook useLayoutEffect has a missing dependency: 'asyncUseEffect'. Either include it or remove the dependency array.",["312"],"React Hook useEffect has missing dependencies: 'pathname.search' and 'username'. Either include them or remove the dependency array.",["313"],["314"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","multilineString","React Hook useLayoutEffect has missing dependencies: 'asyncUseEffect' and 'jobID'. Either include them or remove the dependency array.",["315"],"React Hook useLayoutEffect has missing dependencies: 'pathname.search' and 'projects'. Either include them or remove the dependency array. If 'setSuggestions' needs the current value of 'pathname.search', you can also switch to useReducer instead of useState and read 'pathname.search' in the reducer.",["316"],"React Hook useLayoutEffect has missing dependencies: 'asyncUseEffect' and 'user.username'. Either include them or remove the dependency array.",["317"],["318","319"],["320","321"],"React Hook useEffect has a missing dependency: 'projectID'. Either include it or remove the dependency array.",["322"],["323"],"no-unused-vars","'CountryRegionData' is defined but never used.","unusedVar",["324"],"Unnecessary escape character: \\..",["325","326"],["327","328"],["329","330"],["331","332"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'user.skills'. Either include it or remove the dependency array. If 'setESL' needs the current value of 'user.skills', you can also switch to useReducer instead of useState and read 'user.skills' in the reducer.",["333"],"React Hook useEffect has a missing dependency: 'user.skills'. Either include it or remove the dependency array. If 'setExtraLength' needs the current value of 'user.skills', you can also switch to useReducer instead of useState and read 'user.skills' in the reducer.",["334"],"React Hook useEffect has a missing dependency: 'job.id'. Either include it or remove the dependency array.",["335"],["336"],"no-global-assign","no-unsafe-negation",{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"messageId":"341","fix":"342","desc":"343"},{"messageId":"344","fix":"345","desc":"346"},{"messageId":"341","fix":"347","desc":"343"},{"messageId":"344","fix":"348","desc":"346"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"messageId":"341","fix":"361","desc":"343"},{"messageId":"344","fix":"362","desc":"346"},{"messageId":"341","fix":"363","desc":"343"},{"messageId":"344","fix":"364","desc":"346"},{"desc":"365","fix":"366"},{"desc":"353","fix":"367"},{"desc":"349","fix":"368"},{"messageId":"341","fix":"369","desc":"343"},{"messageId":"344","fix":"370","desc":"346"},{"messageId":"341","fix":"371","desc":"343"},{"messageId":"344","fix":"372","desc":"346"},{"messageId":"341","fix":"373","desc":"343"},{"messageId":"344","fix":"374","desc":"346"},{"messageId":"341","fix":"375","desc":"343"},{"messageId":"344","fix":"376","desc":"346"},{"desc":"377","fix":"378"},{"desc":"377","fix":"379"},{"desc":"380","fix":"381"},{"desc":"365","fix":"382"},"Update the dependencies array to be: [getJobs, getNotifications, getUsers, setGlobalSkills, setProjects, setUserInfo]",{"range":"383","text":"384"},"Update the dependencies array to be: [asyncUseEffect, projectID, user.id, user.username]",{"range":"385","text":"386"},"removeEscape",{"range":"387","text":"388"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"389","text":"390"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"391","text":"388"},{"range":"392","text":"390"},"Update the dependencies array to be: [asyncUseEffect, user]",{"range":"393","text":"394"},"Update the dependencies array to be: [pathname.search, username]",{"range":"395","text":"396"},"Update the dependencies array to be: [asyncUseEffect]",{"range":"397","text":"398"},"Update the dependencies array to be: [asyncUseEffect, jobID, user]",{"range":"399","text":"400"},"Update the dependencies array to be: [pathname.search, projects, users]",{"range":"401","text":"402"},"Update the dependencies array to be: [asyncUseEffect, limitOfPosts, user.username]",{"range":"403","text":"404"},{"range":"405","text":"388"},{"range":"406","text":"390"},{"range":"407","text":"388"},{"range":"408","text":"390"},"Update the dependencies array to be: [projectID]",{"range":"409","text":"410"},{"range":"411","text":"398"},{"range":"412","text":"394"},{"range":"413","text":"388"},{"range":"414","text":"390"},{"range":"415","text":"388"},{"range":"416","text":"390"},{"range":"417","text":"388"},{"range":"418","text":"390"},{"range":"419","text":"388"},{"range":"420","text":"390"},"Update the dependencies array to be: [user.skills]",{"range":"421","text":"422"},{"range":"423","text":"422"},"Update the dependencies array to be: [job.id]",{"range":"424","text":"425"},{"range":"426","text":"410"},[1741,1743],"[getJobs, getNotifications, getUsers, setGlobalSkills, setProjects, setUserInfo]",[1964,1966],"[asyncUseEffect, projectID, user.id, user.username]",[2370,2371],"",[2370,2370],"\\",[2423,2424],[2423,2423],[1600,1606],"[asyncUseEffect, user]",[1948,1950],"[pathname.search, username]",[1626,1628],"[asyncUseEffect]",[1639,1645],"[asyncUseEffect, jobID, user]",[900,907],"[pathname.search, projects, users]",[1564,1578],"[asyncUseEffect, limitOfPosts, user.username]",[1982,1983],[1982,1982],[2035,2036],[2035,2035],[1135,1137],"[projectID]",[1453,1455],[2181,2187],[3120,3121],[3120,3120],[3456,3457],[3456,3456],[3509,3510],[3509,3509],[611,612],[611,611],[846,848],"[user.skills]",[1006,1008],[614,616],"[job.id]",[832,834]]