{"ast":null,"code":"var _jsxFileName = \"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/UserCard/UserCardSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport style from './UserCard.module.css';\nimport Verification from '../../Media/Verification.png';\nimport { Link } from 'react-router-dom';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  arrow: {\n    color: \"#181a19\"\n  }\n}));\n\nfunction UserCardSearch({\n  user\n}) {\n  _s();\n\n  const [extraSkills, setExtraSkills] = useState(null);\n  const [ESL, setESL] = useState(0);\n  useEffect(() => {\n    if (user.skills) {\n      const reduced = user.skills.slice(8).reduce((acc, curr, index) => index === user.skills.slice(8).length - 1 ? acc + curr.label : acc + `${curr.label}, `, '');\n      setExtraSkills(reduced);\n      setESL(user.skills.slice(8).length);\n    }\n  }, []);\n  const classes = useStyles();\n  const BlueOnGreenTooltip = withStyles({\n    tooltip: {\n      color: \"white\",\n      backgroundColor: \"#181a19\",\n      fontFamily: 'Nunito',\n      fontSize: '12px'\n    }\n  })(Tooltip);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: style.userCard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"alignItemsCenter\",\n      className: \"displayFlexColumn\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Profile\",\n        id: style.profilePic,\n        src: user.profilePic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displayFlex\",\n        id: \"alignItemsCenter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font800\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: user.color\n            },\n            children: \"@ \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 47\n          }, this), user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), user.isPremium && /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Verification badge\",\n          id: style.verification,\n          src: Verification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: style.bio,\n      children: user.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"justifyCenter\",\n      style: {\n        flexWrap: 'wrap'\n      },\n      children: [user.skills && user.skills.slice(0, 8).map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.skillDiv,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            background: `${skill.strongColor}`,\n            color: skill.softColor\n          },\n          id: style.skillSpan,\n          children: [skill.user_skills.isValidated && /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              marginRight: '5px'\n            },\n            class: \"fas fa-check-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 63\n          }, this), skill.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, skill.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)), extraSkills && /*#__PURE__*/_jsxDEV(BlueOnGreenTooltip, {\n        classes: {\n          arrow: classes.arrow\n        },\n        id: style.tooltip,\n        title: extraSkills,\n        arrow: true,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: style.plusSearch,\n          children: [\"+\", ESL]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      style: {\n        width: '100%'\n      },\n      to: `/user/${user.username}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: style.btn,\n        style: {\n          background: user.color\n        },\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 75\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserCardSearch, \"ryp82UcDe/IQpWBZFgzGgqNOcSE=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserCardSearch;\nexport default UserCardSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCardSearch\");","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/UserCard/UserCardSearch.jsx"],"names":["React","useEffect","useState","style","Verification","Link","withStyles","makeStyles","Tooltip","FontAwesomeIcon","faCheckCircle","useStyles","theme","arrow","color","UserCardSearch","user","extraSkills","setExtraSkills","ESL","setESL","skills","reduced","slice","reduce","acc","curr","index","length","label","classes","BlueOnGreenTooltip","tooltip","backgroundColor","fontFamily","fontSize","userCard","profilePic","username","isPremium","verification","bio","description","flexWrap","map","skill","skillDiv","background","strongColor","softColor","skillSpan","user_skills","isValidated","marginRight","id","plusSearch","width","btn"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport style from './UserCard.module.css';\nimport Verification from '../../Media/Verification.png';\nimport { Link } from 'react-router-dom';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles(theme => ({\n    arrow: { color: \"#181a19\" }\n}));\n\nfunction UserCardSearch({ user }) {\n    const [extraSkills, setExtraSkills] = useState(null);\n    const [ESL, setESL] = useState(0);\n\n    useEffect(() => {\n        if (user.skills) {\n            const reduced = user.skills.slice(8).reduce((acc, curr, index) => index === user.skills.slice(8).length - 1 ? acc + curr.label : acc + `${curr.label}, `, '');\n            setExtraSkills(reduced);\n            setESL(user.skills.slice(8).length);\n        }\n    }, [])\n\n    const classes = useStyles();\n\n    const BlueOnGreenTooltip = withStyles({\n        tooltip: {\n            color: \"white\",\n            backgroundColor: \"#181a19\",\n            fontFamily: 'Nunito',\n            fontSize: '12px'\n        }\n    })(Tooltip);\n\n    return (\n        <div id={style.userCard}>\n            <div id='alignItemsCenter' className='displayFlexColumn'>\n                <img alt=\"Profile\" id={style.profilePic} src={user.profilePic} />\n                <div className='displayFlex' id='alignItemsCenter'>\n                    <span className='font800'><span style={{ color: user.color }}>@ </span>{user.username}</span>\n                    {user.isPremium && <img alt=\"Verification badge\" id={style.verification} src={Verification} />}\n                </div>\n            </div>\n            <p id={style.bio}>{user.description}</p>\n            <div className='justifyCenter' style={{ flexWrap: 'wrap' }}>\n                {user.skills && user.skills.slice(0, 8).map(skill =>\n                    <div key={skill.id} id={style.skillDiv}>\n                        <span\n                            style={{ background: `${skill.strongColor}`, color: skill.softColor }}\n                            id={style.skillSpan}>\n                            {skill.user_skills.isValidated && <i style={{ marginRight: '5px' }} class=\"fas fa-check-circle\"></i>}{skill.label}\n                        </span>\n                    </div>\n                )}\n                {extraSkills &&\n                    <BlueOnGreenTooltip classes={{ arrow: classes.arrow }} id={style.tooltip} title={extraSkills} arrow>\n                        <span id={style.plusSearch}>+{ESL}</span>\n                    </BlueOnGreenTooltip>}\n            </div>\n            <Link style={{ width: '100%' }} to={`/user/${user.username}`}><button id={style.btn} style={{ background: user.color }}>Contact</button></Link>\n        </div>\n    )\n}\n\nexport default UserCardSearch;"]},"metadata":{},"sourceType":"module"}