{"ast":null,"code":"var _jsxFileName = \"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/AddJob/AddJob.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useLayoutEffect } from 'react';\nimport style from './AddJob.module.css';\nimport axios from 'axios';\nimport { Hint } from 'react-autocomplete-hint';\nimport { connect } from 'react-redux';\nimport { Editor } from '@tinymce/tinymce-react';\nimport Loading from '../../Media/Loading.gif';\nimport jwt from 'jsonwebtoken';\nimport { setUserInfo } from '../../Actions/index';\nimport { Link } from 'react-router-dom';\nimport { Alert } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddJob({\n  projectID,\n  skills,\n  setUserInfo\n}) {\n  _s();\n\n  const [project, setProject] = useState({});\n  const [selectedSkills, setSelectedSkills] = useState([]);\n  const [input, setInput] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  async function asyncUseEffect(username, userId) {\n    await setUserInfo(username);\n\n    try {\n      const projectData = await axios.get(`/projects/${projectID}`);\n      const userFound = await projectData.data.users.find(member => member.id === userId);\n      if (!userFound || userFound.userXprojects.isFounder === false || projectData.data.isDeleted) window.location.replace('/error');\n      setProject(projectData.data);\n      setTimeout(() => {\n        setLoading(false);\n      }, 1000);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useLayoutEffect(() => {\n    const user = jwt.decode(JSON.parse(localStorage.getItem('user')));\n\n    if (user) {\n      asyncUseEffect(user.username, user.id);\n    } else window.location.replace('/error');\n  }, []);\n\n  function removeSkill(e) {\n    setSelectedSkills(selectedSkills.filter(skill => skill.label !== e.target.name));\n  }\n\n  function addSkill(e) {\n    if (e.keyCode === 13) {\n      var found = skills.find(skill => skill.label.toLowerCase() === e.target.value.toLowerCase());\n      var found2 = selectedSkills.find(skill => skill.label.toLowerCase() === e.target.value.toLowerCase());\n\n      if (found && !found2) {\n        setSelectedSkills(selectedSkills.concat(found));\n        e.target.value = '';\n      }\n    }\n  }\n\n  function handleInputChange(e) {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleDescriptionChange(e) {\n    setInput({ ...input,\n      description: e.target.getContent()\n    });\n  }\n\n  function handleSubmit() {\n    setLoading(true);\n    const justIDs = selectedSkills.map(skill => skill.id);\n    if (!input.title || !input.description) return setError('Please complete all the necessary fields.');\n    axios.post(`/jobs/${project.id}`, {\n      jobInfo: input,\n      skills: justIDs\n    }).then(res => window.location.replace(`/project/jobPanel/${project.id}`)).catch(err => {\n      setError('Something failedâ€”we are sorry!');\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.fixedDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.logoDiv,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/project/profile/${projectID}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"Project logo\",\n            src: project.logo,\n            id: style.logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        id: style.link,\n        to: `/project/jobPanel/${projectID}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font200\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-door-open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 103\n          }, this), \" Go back\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 77\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.secondDiv,\n      children: !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.innerDiv,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: style.mainSpan,\n          className: \"font800\",\n          children: \"Post a job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"displayFlexColumn\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font600\",\n            children: \"Title *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            maxLength: \"255\",\n            name: \"title\",\n            onChange: e => handleInputChange(e),\n            className: style.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"displayFlexColumn\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.title,\n            children: \"Description *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), window.innerWidth > 385 && /*#__PURE__*/_jsxDEV(Editor, {\n            onChange: e => handleDescriptionChange(e),\n            apiKey: \"5ltasngibqdlae7csndk86vmlye4eqd8jhk6fsiza0lpz5db\",\n            init: {\n              selector: 'textarea',\n              content_style: \"@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800;900&display=swap'); body { font-family: 'Nunito';}\",\n              branding: false,\n              height: 300,\n              width: 723,\n              menubar: false,\n              plugins: ['advlist autolink lists link image', 'charmap print preview anchor help', 'searchreplace visualblocks code', 'insertdatetime media table paste wordcount'],\n              toolbar: 'undo redo | formatselect | bold italic | \\\n                            alignleft aligncenter alignright | \\\n                            bullist numlist outdent indent'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: style.textarea,\n            placeholder: \"Describe your project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.skillDiv,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font600\",\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: style.selectedSkills,\n            children: selectedSkills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  background: skill.strongColor,\n                  color: skill.softColor\n                },\n                name: skill.label,\n                onClick: e => removeSkill(e),\n                id: style.skillBtn,\n                children: skill.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 41\n              }, this)\n            }, skill.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Hint, {\n            options: skills,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onKeyDown: e => addSkill(e),\n              className: style.inputSkill,\n              placeholder: \"Press enter to add a skill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"advert\",\n            children: \"If you don't find your skill, please contact us.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            id: style.uploadBtn,\n            children: \"Post job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            id: style.alert,\n            color: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Loading GIF\",\n        className: style.loading,\n        src: Loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddJob, \"L676BlwMuj2KtWKP+dX98tSkOxg=\");\n\n_c = AddJob;\n\nfunction mapStateToProps(state) {\n  return {\n    skills: state.allSkills,\n    user: state.userInfo\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUserInfo: username => dispatch(setUserInfo(username))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddJob);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/AddJob/AddJob.jsx"],"names":["React","useState","useLayoutEffect","style","axios","Hint","connect","Editor","Loading","jwt","setUserInfo","Link","Alert","AddJob","projectID","skills","project","setProject","selectedSkills","setSelectedSkills","input","setInput","loading","setLoading","error","setError","asyncUseEffect","username","userId","projectData","get","userFound","data","users","find","member","id","userXprojects","isFounder","isDeleted","window","location","replace","setTimeout","err","console","log","user","decode","JSON","parse","localStorage","getItem","removeSkill","e","filter","skill","label","target","name","addSkill","keyCode","found","toLowerCase","value","found2","concat","handleInputChange","handleDescriptionChange","description","getContent","handleSubmit","justIDs","map","title","post","jobInfo","then","res","catch","fixedDiv","logoDiv","logo","link","secondDiv","innerDiv","mainSpan","innerWidth","selector","content_style","branding","height","width","menubar","plugins","toolbar","textarea","skillDiv","background","strongColor","color","softColor","skillBtn","inputSkill","uploadBtn","alert","mapStateToProps","state","allSkills","userInfo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from 'react';\nimport style from './AddJob.module.css';\nimport axios from 'axios';\nimport { Hint } from 'react-autocomplete-hint';\nimport { connect } from 'react-redux';\nimport { Editor } from '@tinymce/tinymce-react';\nimport Loading from '../../Media/Loading.gif';\nimport jwt from 'jsonwebtoken';\nimport { setUserInfo } from '../../Actions/index';\nimport { Link } from 'react-router-dom';\nimport { Alert } from 'reactstrap';\n\nfunction AddJob({ projectID, skills, setUserInfo }) {\n\n    const [project, setProject] = useState({});\n    const [selectedSkills, setSelectedSkills] = useState([]);\n    const [input, setInput] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    async function asyncUseEffect(username, userId) {\n        await (setUserInfo(username));\n        try {\n            const projectData = await axios.get(`/projects/${projectID}`);\n            const userFound = await projectData.data.users.find(member => member.id === userId);\n            if (!userFound || userFound.userXprojects.isFounder === false || projectData.data.isDeleted) window.location.replace('/error');\n            setProject(projectData.data);\n            setTimeout(() => {\n                setLoading(false);\n            }, 1000)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    useLayoutEffect(() => {\n        const user = jwt.decode(JSON.parse(localStorage.getItem('user')))\n        if (user) {\n            asyncUseEffect(user.username, user.id);\n        } else window.location.replace('/error');\n    }, [])\n\n    function removeSkill(e) {\n        setSelectedSkills(selectedSkills.filter(skill => skill.label !== e.target.name))\n    }\n\n    function addSkill(e) {\n        if (e.keyCode === 13) {\n            var found = skills.find(skill => skill.label.toLowerCase() === e.target.value.toLowerCase());\n            var found2 = selectedSkills.find(skill => skill.label.toLowerCase() === e.target.value.toLowerCase());\n            if (found && !found2) {\n                setSelectedSkills(selectedSkills.concat(found));\n                e.target.value = '';\n            }\n        }\n    }\n\n    function handleInputChange(e) {\n        setInput({\n            ...input,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    function handleDescriptionChange(e) {\n        setInput({\n            ...input,\n            description: e.target.getContent()\n        })\n    }\n\n    function handleSubmit() {\n        setLoading(true);\n        const justIDs = selectedSkills.map(skill => skill.id);\n\n        if (!input.title || !input.description) return setError('Please complete all the necessary fields.')\n\n        axios.post(`/jobs/${project.id}`, { jobInfo: input, skills: justIDs })\n            .then(res => window.location.replace(`/project/jobPanel/${project.id}`))\n            .catch(err => {\n                setError('Something failedâ€”we are sorry!')\n            })\n    }\n\n    return (\n        <div>\n            <div id={style.fixedDiv}>\n                <div id={style.logoDiv}>\n                    <Link to={`/project/profile/${projectID}`}><img alt=\"Project logo\" src={project.logo} id={style.logo} /></Link>\n                </div>\n                <Link id={style.link} to={`/project/jobPanel/${projectID}`}><span className='font200'><i class=\"fas fa-door-open\"></i> Go back</span></Link>\n            </div>\n            <div id={style.secondDiv}>\n                {!loading ?\n                    <div id={style.innerDiv}>\n                        <h1 id={style.mainSpan} className='font800'>Post a job</h1>\n                        <div className='displayFlexColumn'>\n                            <span className='font600'>Title *</span>\n                            <input maxLength='255' name='title' onChange={(e) => handleInputChange(e)} className={style.input} />\n                        </div>\n                        <div className='displayFlexColumn'>\n                            <span className={style.title}>Description *</span>\n                            {window.innerWidth > 385 && <Editor\n                                onChange={(e) => handleDescriptionChange(e)}\n                                apiKey='5ltasngibqdlae7csndk86vmlye4eqd8jhk6fsiza0lpz5db'\n                                init={{\n                                    selector: 'textarea',\n                                    content_style:\n                                        \"@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800;900&display=swap'); body { font-family: 'Nunito';}\",\n                                    branding: false,\n                                    height: 300,\n                                    width: 723,\n                                    menubar: false,\n                                    plugins: [\n                                        'advlist autolink lists link image',\n                                        'charmap print preview anchor help',\n                                        'searchreplace visualblocks code',\n                                        'insertdatetime media table paste wordcount',\n                                    ],\n                                    toolbar:\n                                        'undo redo | formatselect | bold italic | \\\n                            alignleft aligncenter alignright | \\\n                            bullist numlist outdent indent'\n                                }}\n                            />}\n                            <textarea id={style.textarea} placeholder='Describe your project'></textarea>\n                        </div>\n                        <div id={style.skillDiv}>\n                            <span className='font600'>Skills</span>\n                            <div id={style.selectedSkills}>\n                                {selectedSkills.map(skill =>\n                                    <div key={skill.id}>\n                                        <button style={{ background: skill.strongColor, color: skill.softColor }} name={skill.label} onClick={(e) => removeSkill(e)} id={style.skillBtn}>{skill.label}</button>\n                                    </div>\n                                )}\n                            </div>\n                            <Hint options={skills}>\n                                <input onKeyDown={(e) => addSkill(e)} className={style.inputSkill} placeholder='Press enter to add a skill' />\n                            </Hint>\n                            <span className='advert'>If you don't find your skill, please contact us.</span>\n                        </div>\n                        <div>\n                            <button onClick={handleSubmit} id={style.uploadBtn}>Post job</button>\n                            {error &&\n                                <Alert id={style.alert} color=\"danger\">\n                                    {error}\n                                </Alert>\n                            }\n                        </div>\n                    </div> :\n                    <img alt=\"Loading GIF\" className={style.loading} src={Loading} />}\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        skills: state.allSkills,\n        user: state.userInfo\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setUserInfo: username => dispatch(setUserInfo(username))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddJob);"]},"metadata":{},"sourceType":"module"}