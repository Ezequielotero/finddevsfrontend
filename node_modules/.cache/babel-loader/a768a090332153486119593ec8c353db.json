{"ast":null,"code":"var _jsxFileName = \"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobListing/JobCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport style from './JobListings.module.css';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { filterJob } from '../../Actions/index';\nimport moment from 'moment';\nimport { getDate } from '../../utils';\nimport Verification from '../../Media/logo.png';\nimport InvertedVerification from '../../Media/invertedlogo.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  arrow: {\n    color: \"#181a19\"\n  }\n}));\n\nfunction JobCard({\n  job,\n  filterJobs,\n  setLoading,\n  skillSelection\n}) {\n  _s();\n\n  const classes = useStyles();\n  const BlueOnGreenTooltip = withStyles({\n    tooltip: {\n      color: \"white\",\n      backgroundColor: \"#181a19\",\n      fontFamily: 'Nunito',\n      fontSize: '12px'\n    }\n  })(Tooltip);\n\n  function addSkill(skill) {\n    setLoading(true);\n    const dontRepeat = skillSelection.find(filtered => filtered.id === skill.id);\n    if (!dontRepeat) filterJobs(skill);\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: style.mainDiv,\n    style: {\n      background: job.project.mainColor,\n      color: job.project.brightness === 'bright' ? '#fff' : '#000'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayFlex\",\n      id: \"alignItemsCenter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.imgDiv,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Project logo\",\n          src: job.project.logo,\n          id: style.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.jobInfoDiv,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"displayFlex\",\n          id: style.nameAndLogo,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: style.projectName,\n            children: job.project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), job.project.isPremium && /*#__PURE__*/_jsxDEV(BlueOnGreenTooltip, {\n            classes: {\n              arrow: classes.arrow\n            },\n            id: style.tooltip,\n            title: \"Verified project\",\n            arrow: true,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"FindDevs verification\",\n              id: style.verification,\n              src: job.project.brightness === 'bright' ? InvertedVerification : Verification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.badgeDiv,\n          children: [job.project.upvotes > 50 && /*#__PURE__*/_jsxDEV(\"span\", {\n            id: style.badge,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faThumbsUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 77\n            }, this), \" HIGHLY UPVOTED\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 54\n          }, this), job.project.users.length > 5 && /*#__PURE__*/_jsxDEV(\"span\", {\n            id: style.badge,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-chart-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 81\n            }, this), \" GROWING FAST\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 58\n          }, this), job.project.users.length >= 10 && /*#__PURE__*/_jsxDEV(\"span\", {\n            id: style.badge,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 82\n            }, this), \" BIG TEAM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.skillDiv,\n      children: job.skills.map(skill => /*#__PURE__*/_jsxDEV(BlueOnGreenTooltip, {\n        classes: {\n          arrow: classes.arrow\n        },\n        id: style.tooltip,\n        title: \"Add tag to filters\",\n        arrow: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: job.project.brightness === 'bright' ? '2px solid #fff' : '2px solid #000'\n          },\n          onClick: () => addSkill(skill),\n          id: style.skillSpan,\n          children: skill.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, skill.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.applyAndMoment,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/job/info/${job.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            color: job.project.brightness === 'bright' ? '#fff' : '#000',\n            border: job.project.brightness === 'bright' ? '4px solid #fff' : '4px solid #000'\n          },\n          id: style.btn,\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: style.time,\n        children: [\"\\uD83D\\uDCCC\", getDate(moment(job.createdAt).format('MM/DD/YYYY'))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = JobCard;\n\nfunction mapStateToProps(state) {\n  return {\n    skillSelection: state.jobSkillSelection\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    filterJobs: skill => dispatch(filterJob(skill))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobListing/JobCard.jsx"],"names":["React","style","Tooltip","withStyles","makeStyles","Link","connect","filterJob","moment","getDate","Verification","InvertedVerification","FontAwesomeIcon","faThumbsUp","useStyles","theme","arrow","color","JobCard","job","filterJobs","setLoading","skillSelection","classes","BlueOnGreenTooltip","tooltip","backgroundColor","fontFamily","fontSize","addSkill","skill","dontRepeat","find","filtered","id","mainDiv","background","project","mainColor","brightness","imgDiv","logo","icon","jobInfoDiv","nameAndLogo","projectName","name","isPremium","verification","title","badgeDiv","upvotes","badge","users","length","skillDiv","skills","map","border","skillSpan","label","applyAndMoment","btn","time","createdAt","format","mapStateToProps","state","jobSkillSelection","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport style from './JobListings.module.css';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { filterJob } from '../../Actions/index';\nimport moment from 'moment';\nimport { getDate } from '../../utils';\nimport Verification from '../../Media/logo.png';\nimport InvertedVerification from '../../Media/invertedlogo.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles(theme => ({\n    arrow: { color: \"#181a19\" }\n}));\n\nfunction JobCard({ job, filterJobs, setLoading, skillSelection }) {\n\n    const classes = useStyles();\n\n    const BlueOnGreenTooltip = withStyles({\n        tooltip: {\n            color: \"white\",\n            backgroundColor: \"#181a19\",\n            fontFamily: 'Nunito',\n            fontSize: '12px'\n        }\n    })(Tooltip);\n\n    function addSkill (skill) {\n        setLoading (true);\n        const dontRepeat = skillSelection.find (filtered => filtered.id === skill.id);\n        if (!dontRepeat) filterJobs(skill);\n        setLoading (false);\n    }\n\n    return (\n        <div id={style.mainDiv} style={{ background: job.project.mainColor, color: job.project.brightness === 'bright' ? '#fff' : '#000' }}>\n            <div className='displayFlex' id='alignItemsCenter'>\n                <div id={style.imgDiv}><img alt=\"Project logo\" src={job.project.logo} id={style.icon} /></div>\n                <div id={style.jobInfoDiv}>\n                    <div className='displayFlex' id={style.nameAndLogo}>\n                        <span id={style.projectName}>{job.project.name}</span>\n                        {job.project.isPremium && <BlueOnGreenTooltip classes={{ arrow: classes.arrow }} id={style.tooltip} title='Verified project' arrow>\n                            <img alt=\"FindDevs verification\" id={style.verification} src={job.project.brightness === 'bright' ? InvertedVerification : Verification} />\n                        </BlueOnGreenTooltip>}\n                    </div>\n                    <span>{job.title}</span>\n                    <div id={style.badgeDiv}>\n                        {job.project.upvotes > 50 && <span id={style.badge}><FontAwesomeIcon icon={faThumbsUp} /> HIGHLY UPVOTED</span>}\n                        {job.project.users.length > 5 && <span id={style.badge}><i class=\"fas fa-chart-line\"></i> GROWING FAST</span>}\n                        {job.project.users.length >=10 && <span id={style.badge}><i class=\"fas fa-users\"></i> BIG TEAM</span>}\n                    </div>\n                </div>\n            </div>\n            <div id={style.skillDiv}>\n                {job.skills.map(skill =>\n                    <BlueOnGreenTooltip key={skill.id} classes={{ arrow: classes.arrow }} id={style.tooltip} title='Add tag to filters' arrow>\n                        <div style={{ border: job.project.brightness === 'bright' ? '2px solid #fff' : '2px solid #000' }} onClick={() => addSkill (skill) } id={style.skillSpan}>{skill.label}</div>\n                    </BlueOnGreenTooltip>\n                )}\n            </div>\n            <div id={style.applyAndMoment}>\n                <Link to={`/job/info/${job.id}`}><button style={{ color: job.project.brightness === 'bright' ? '#fff' : '#000', border: job.project.brightness === 'bright' ? '4px solid #fff' : '4px solid #000' }} id={style.btn}>Apply</button></Link>\n                <span id={style.time}>📌{getDate(moment(job.createdAt).format('MM/DD/YYYY'))}</span>\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps (state) {\n    return {\n        skillSelection: state.jobSkillSelection\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        filterJobs: skill => dispatch(filterJob(skill))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobCard);"]},"metadata":{},"sourceType":"module"}