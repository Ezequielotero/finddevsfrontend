{"ast":null,"code":"var _jsxFileName = \"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/WorkersList/WorkersList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport style from './WorkersList.module.css';\nimport UserCard from '../../Components/UserCard/UserCard';\nimport { Hint } from 'react-autocomplete-hint';\nimport { removeFilters, selectWorkers } from '../../Actions/index';\nimport GoPremium from '../../Components/GoPremiumPopUp/GoPremium';\nimport Loading from '../../Media/Loading.gif';\nimport wavyImage from '../../Media/wavyBorder1.jpg';\nimport Verification from '../../Media/Verification.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDoorOpen, faTimesCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkersList({\n  users,\n  skills,\n  skillSelection,\n  removeFilters,\n  filteredWorkers,\n  selectWorkers,\n  userInfo\n}) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n\n  function addSkill(e) {\n    if (e.keyCode === 13) {\n      const dontRepeat = skillSelection.find(skill => skill.label.toLowerCase() === e.target.value.toLowerCase());\n      const found = skills.find(skill => skill.label.toLowerCase() === e.target.value.toLowerCase());\n\n      if (found && !dontRepeat) {\n        setLoading(true);\n        selectWorkers(found);\n        setLoading(false);\n        e.target.value = '';\n      }\n    }\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Loading GIF\",\n      id: style.loading,\n      src: Loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"displayFlexColumn\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.mainImage,\n      style: {\n        backgroundImage: `url(${wavyImage})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.searchDiv,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Hint, {\n          options: skills,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onKeyDown: e => addSkill(e),\n            type: \"text\",\n            placeholder: \"Search and filter by skill\",\n            id: style.searchInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), !userInfo.isPremium && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.GPdiv,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Do you want to appear on the frontpage? \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font800\",\n          children: \"Verify your FindDevs account!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GoPremium, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: skillSelection.length > 0 ? 'flex' : 'none'\n      },\n      id: style.filteredDiv,\n      children: skillSelection.map(filtered => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => removeFilters(filtered),\n        style: {\n          background: filtered.strongColor,\n          color: filtered.softColor\n        },\n        id: style.skillSpan,\n        children: [filtered.label, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-times-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 194\n        }, this)]\n      }, filtered.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), skillSelection.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displayFlexColumn\",\n        id: \"alignItemsCenter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"displayFlex\",\n          id: \"alignItemsCenter\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"Verification badge\",\n            src: Verification,\n            id: style.verification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font800\",\n            children: \"Verified developers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.userCards,\n          children: users.map(user => user.isPremium && /*#__PURE__*/_jsxDEV(UserCard, {\n            setLoading: setLoading,\n            user: user\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 66\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: skills.map(skill => skill.users.length > 0 && skill.users.find(user => user.isPremium === true) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"displayFlexColumn\",\n          id: \"alignItemsCenter\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"displayFlex\",\n            id: \"alignItemsCenter\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"Skill logo\",\n              src: skill.logo,\n              id: style.verification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font800\",\n              children: [skill.label, \" developers (\", skill.users.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: style.userCards,\n            children: skill.users.map(user => user.isPremium && /*#__PURE__*/_jsxDEV(UserCard, {\n              setLoading: setLoading,\n              user: user\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 84\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 37\n          }, this)]\n        }, skill.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), skillSelection.length > 0 && filteredWorkers.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"justifyCenter\",\n      id: \"flexWrap\",\n      children: filteredWorkers.map(worker => /*#__PURE__*/_jsxDEV(UserCard, {\n        setLoading: setLoading,\n        user: worker\n      }, worker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 52\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkersList, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n\n_c = WorkersList;\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users,\n    skills: state.allSkills,\n    skillSelection: state.skillSelection,\n    filteredWorkers: state.filteredWorkers,\n    userInfo: state.userInfo\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeFilters: skill => dispatch(removeFilters(skill)),\n    selectWorkers: skill => dispatch(selectWorkers(skill))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkersList);\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkersList\");","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/WorkersList/WorkersList.jsx"],"names":["React","useState","connect","style","UserCard","Hint","removeFilters","selectWorkers","GoPremium","Loading","wavyImage","Verification","FontAwesomeIcon","faDoorOpen","faTimesCircle","faCheckCircle","WorkersList","users","skills","skillSelection","filteredWorkers","userInfo","loading","setLoading","addSkill","e","keyCode","dontRepeat","find","skill","label","toLowerCase","target","value","found","mainImage","backgroundImage","searchDiv","searchInput","isPremium","GPdiv","display","length","filteredDiv","map","filtered","background","strongColor","color","softColor","skillSpan","id","verification","userCards","user","logo","worker","mapStateToProps","state","allSkills","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport style from './WorkersList.module.css';\nimport UserCard from '../../Components/UserCard/UserCard';\nimport { Hint } from 'react-autocomplete-hint';\nimport { removeFilters, selectWorkers } from '../../Actions/index';\nimport GoPremium from '../../Components/GoPremiumPopUp/GoPremium';\nimport Loading from '../../Media/Loading.gif';\nimport wavyImage from '../../Media/wavyBorder1.jpg';\nimport Verification from '../../Media/Verification.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDoorOpen, faTimesCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nfunction WorkersList({ users, skills, skillSelection, removeFilters, filteredWorkers, selectWorkers, userInfo }) {\n\n    const [loading, setLoading] = useState(false);\n\n    function addSkill(e) {\n        if (e.keyCode === 13) {\n            const dontRepeat = skillSelection.find (skill => skill.label.toLowerCase() === e.target.value.toLowerCase());\n            const found = skills.find(skill => skill.label.toLowerCase() === e.target.value.toLowerCase());\n            if (found && !dontRepeat) {\n                setLoading(true);\n                selectWorkers(found);\n                setLoading(false);\n                e.target.value = '';\n            }\n        }\n    }\n\n    if (loading) {\n        return <img alt=\"Loading GIF\" id={style.loading} src={Loading} />\n    }\n\n    return (\n        <div className='displayFlexColumn'>\n            <div id={style.mainImage} style={{ backgroundImage: `url(${wavyImage})` }}>\n                <div id={style.searchDiv}>\n                    <i class=\"fas fa-search\"></i>\n                    <Hint options={skills}>\n                        <input onKeyDown={(e) => addSkill(e)} type='text' placeholder='Search and filter by skill' id={style.searchInput} />\n                    </Hint>\n                </div>\n            </div>\n            {!userInfo.isPremium &&\n                <div id={style.GPdiv}>\n                    <span>Do you want to appear on the frontpage? <span className='font800'>Verify your FindDevs account!</span></span>\n                    <GoPremium />\n                </div>}\n            <div style={{ display: skillSelection.length > 0 ? 'flex' : 'none' }} id={style.filteredDiv}>\n                {skillSelection.map(filtered =>\n                    <div key={filtered.id} onClick={() => removeFilters(filtered)} style={{ background: filtered.strongColor, color: filtered.softColor }} id={style.skillSpan}>{filtered.label} <i class=\"fas fa-times-circle\"></i></div>\n                )}\n            </div>\n            {skillSelection.length === 0 &&\n                <div>\n                    <div className='displayFlexColumn' id='alignItemsCenter'>\n                        <div className='displayFlex' id='alignItemsCenter'>\n                            <img alt=\"Verification badge\" src={Verification} id={style.verification} />\n                            <h3 className='font800'>Verified developers</h3>\n                        </div>\n                        <div id={style.userCards}>\n                            {users.map(user => user.isPremium && <UserCard setLoading={setLoading} key={user.id} user={user} />)}\n                        </div>\n                    </div>\n                    <div>\n                        {skills.map(skill =>\n                            skill.users.length > 0 && skill.users.find(user => user.isPremium === true) ?\n                                <div key={skill.id} className='displayFlexColumn' id='alignItemsCenter'>\n                                    <div className='displayFlex' id='alignItemsCenter'>\n                                        <img alt=\"Skill logo\" src={skill.logo} id={style.verification} />\n                                        <h3 className='font800'>{skill.label} developers ({skill.users.length})</h3>\n                                    </div>\n                                    <div id={style.userCards}>\n                                        {skill.users.map(user => user.isPremium && <UserCard setLoading={setLoading} key={user.id} user={user} />)}\n                                    </div>\n                                </div> : null\n                        )}\n                    </div>\n                </div>\n            }\n            {skillSelection.length > 0 && filteredWorkers.length !== 0 &&\n                <div className='justifyCenter' id='flexWrap'>\n                    {filteredWorkers.map(worker => <UserCard setLoading={setLoading} key={worker.id} user={worker} />)}\n                </div>\n            }\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        users: state.users,\n        skills: state.allSkills,\n        skillSelection: state.skillSelection,\n        filteredWorkers: state.filteredWorkers,\n        userInfo: state.userInfo\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        removeFilters: skill => dispatch(removeFilters(skill)),\n        selectWorkers: skill => dispatch(selectWorkers(skill))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkersList);"]},"metadata":{},"sourceType":"module"}