{"ast":null,"code":"const initialState = {\n  allSkills: [],\n  userInfo: {},\n  projects: [],\n  users: [],\n  jobs: [],\n  skillSelection: [],\n  jobSkillSelection: [],\n  filteredWorkers: [],\n  filteredJobs: [],\n  notifications: [],\n  limitOfPosts: false\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_GLOBAL_SKILLS':\n      return { ...state,\n        allSkills: action.payload\n      };\n\n    case 'SET_USER_DATA':\n      const find = action.payload.projects.find(project => project.userXprojects.isFounder === true && !project.isDeleted && project.ownerId === action.payload.id);\n      return { ...state,\n        userInfo: action.payload,\n        limitOfPosts: find && !action.payload.isPremium ? true : false\n      };\n\n    case 'SET_PROJECTS':\n      return { ...state,\n        projects: action.payload\n      };\n\n    case 'GET_USERS':\n      return { ...state,\n        users: action.payload,\n        filteredWorkers: action.payload\n      };\n\n    case 'GET_JOBS':\n      return { ...state,\n        jobs: action.payload,\n        filteredJobs: action.payload\n      };\n\n    case 'REMOVE_FILTER':\n      const preFilteredSkills = state.skillSelection.filter(skill => skill.id !== action.payload.id);\n\n      if (preFilteredSkills.length > 0) {\n        var firstFilteredWorkers = [];\n\n        for (var i = 0; i < state.users.length; i++) {\n          for (var j = 0; j < state.users[i].skills.length; j++) {\n            if (state.users[i].skills[j].id === preFilteredSkills[0].id) firstFilteredWorkers.push(state.users[i]);\n          }\n        }\n\n        for (var i = 1; i < preFilteredSkills.length; i++) {\n          firstFilteredWorkers = firstFilteredWorkers.filter(worker => {\n            for (var j = 0; j < worker.skills.length; j++) {\n              if (worker.skills[j].id === preFilteredSkills[i].id) return worker;\n            }\n          });\n        }\n      }\n\n      return { ...state,\n        skillSelection: preFilteredSkills,\n        filteredWorkers: preFilteredSkills.length > 0 ? firstFilteredWorkers : state.users\n      };\n\n    case 'REMOVE_JOB_FILTER':\n      const preFilteredJobSkills = state.jobSkillSelection.filter(skill => skill.id !== action.payload.id);\n\n      if (preFilteredJobSkills.length > 0) {\n        var firstFilteredJobs = [];\n\n        for (var i = 0; i < state.jobs.length; i++) {\n          for (var j = 0; j < state.jobs[i].skills.length; j++) {\n            if (state.jobs[i].skills[j].id === preFilteredJobSkills[0].id) firstFilteredJobs.push(state.jobs[i]);\n          }\n        }\n\n        for (var i = 1; i < preFilteredJobSkills.length; i++) {\n          firstFilteredJobs = firstFilteredJobs.filter(job => {\n            for (var j = 0; j < job.skills.length; j++) {\n              if (job.skills[j].id === preFilteredJobSkills[i].id) return job;\n            }\n          });\n        }\n      }\n\n      return { ...state,\n        jobSkillSelection: preFilteredJobSkills,\n        filteredJobs: preFilteredJobSkills.length > 0 ? firstFilteredJobs : state.jobs\n      };\n\n    case 'SELECT_WORKERS':\n      var filteredArray = state.filteredWorkers.map(worker => {\n        for (var i = 0; i < worker.skills.length; i++) {\n          if (worker.skills[i].label === action.payload.label) return worker;\n        }\n      });\n      filteredArray = filteredArray.filter(worker => worker !== undefined);\n      filteredArray = filteredArray.sort((a, b) => {\n        return b.isPremium - a.isPremium;\n      });\n      const found = state.allSkills.find(skill => skill.id === action.payload.id);\n      return { ...state,\n        filteredWorkers: filteredArray,\n        skillSelection: state.skillSelection.concat(found)\n      };\n\n    case 'FILTER_JOBS':\n      var filteredArray = state.filteredJobs.map(job => {\n        for (var i = 0; i < job.skills.length; i++) {\n          if (job.skills[i].label === action.payload.label) return job;\n        }\n      });\n      filteredArray = filteredArray.filter(job => job !== undefined);\n      const skillFound = state.allSkills.find(skill => skill.id === action.payload.id);\n      return { ...state,\n        filteredJobs: filteredArray,\n        jobSkillSelection: state.jobSkillSelection.concat(skillFound)\n      };\n\n    case 'GET_NOTIFICATIONS':\n      return { ...state,\n        notifications: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/Reducers/index.js"],"names":["initialState","allSkills","userInfo","projects","users","jobs","skillSelection","jobSkillSelection","filteredWorkers","filteredJobs","notifications","limitOfPosts","rootReducer","state","action","type","payload","find","project","userXprojects","isFounder","isDeleted","ownerId","id","isPremium","preFilteredSkills","filter","skill","length","firstFilteredWorkers","i","j","skills","push","worker","preFilteredJobSkills","firstFilteredJobs","job","filteredArray","map","label","undefined","sort","a","b","found","concat","skillFound"],"mappings":"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","sourcesContent":["const initialState = {\n    allSkills: [],\n    userInfo: {},\n    projects: [],\n    users: [],\n    jobs: [],\n    skillSelection: [],\n    jobSkillSelection: [],\n    filteredWorkers: [],\n    filteredJobs: [],\n    notifications: [],\n    limitOfPosts: false\n}\n\nfunction rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_GLOBAL_SKILLS':\n            return {\n                ...state,\n                allSkills: action.payload\n            }\n        case 'SET_USER_DATA':\n            const find = action.payload.projects.find (project => project.userXprojects.isFounder === true && !project.isDeleted && project.ownerId ===action.payload.id);\n            return {\n                ...state,\n                userInfo: action.payload,\n                limitOfPosts: find && !action.payload.isPremium ? true : false\n            }\n        case 'SET_PROJECTS':\n            return {\n                ...state,\n                projects: action.payload,\n            }\n        case 'GET_USERS':\n            return {\n                ...state,\n                users: action.payload,\n                filteredWorkers: action.payload\n            }\n        case 'GET_JOBS':\n            return {\n                ...state,\n                jobs: action.payload,\n                filteredJobs: action.payload\n            }\n        case 'REMOVE_FILTER':\n            const preFilteredSkills = state.skillSelection.filter(skill => skill.id !== action.payload.id);\n            if (preFilteredSkills.length > 0) {\n                var firstFilteredWorkers = [];\n                for (var i = 0; i < state.users.length; i++) {\n                    for (var j = 0; j < state.users[i].skills.length; j++) {\n                        if (state.users[i].skills[j].id === preFilteredSkills[0].id) firstFilteredWorkers.push(state.users[i]);\n                    }\n                }\n                for (var i = 1; i < preFilteredSkills.length; i++) {\n                    firstFilteredWorkers = firstFilteredWorkers.filter(worker => {\n                        for (var j = 0; j < worker.skills.length; j++) {\n                            if (worker.skills[j].id === preFilteredSkills[i].id) return worker;\n                        }\n                    })\n                }\n            }\n            return {\n                ...state,\n                skillSelection: preFilteredSkills,\n                filteredWorkers: preFilteredSkills.length > 0 ? firstFilteredWorkers : state.users\n            }\n\n        case 'REMOVE_JOB_FILTER':\n            const preFilteredJobSkills = state.jobSkillSelection.filter(skill => skill.id !== action.payload.id);\n            if (preFilteredJobSkills.length > 0) {\n                var firstFilteredJobs = [];\n                for (var i = 0; i < state.jobs.length; i++) {\n                    for (var j = 0; j < state.jobs[i].skills.length; j++) {\n                        if (state.jobs[i].skills[j].id === preFilteredJobSkills[0].id) firstFilteredJobs.push(state.jobs[i]);\n                    }\n                }\n                for (var i = 1; i < preFilteredJobSkills.length; i++) {\n                    firstFilteredJobs = firstFilteredJobs.filter(job => {\n                        for (var j = 0; j < job.skills.length; j++) {\n                            if (job.skills[j].id === preFilteredJobSkills[i].id) return job;\n                        }\n                    })\n                }\n            }\n            return {\n                ...state,\n                jobSkillSelection: preFilteredJobSkills,\n                filteredJobs: preFilteredJobSkills.length > 0 ? firstFilteredJobs : state.jobs\n            }\n\n        case 'SELECT_WORKERS':\n            var filteredArray = state.filteredWorkers.map(worker => {\n                for (var i = 0; i < worker.skills.length; i++) {\n                    if (worker.skills[i].label === action.payload.label) return worker;\n                }\n            });\n            filteredArray = filteredArray.filter(worker => worker !== undefined);\n            filteredArray = filteredArray.sort((a, b) => {\n                return b.isPremium - a.isPremium\n            })\n            const found = state.allSkills.find(skill => skill.id === action.payload.id);\n            return {\n                ...state,\n                filteredWorkers: filteredArray,\n                skillSelection: state.skillSelection.concat(found)\n            }\n\n        case 'FILTER_JOBS':\n            var filteredArray = state.filteredJobs.map(job => {\n                for (var i = 0; i < job.skills.length; i++) {\n                    if (job.skills[i].label === action.payload.label) return job;\n                }\n            });\n            filteredArray = filteredArray.filter(job => job !== undefined);\n            const skillFound = state.allSkills.find(skill => skill.id === action.payload.id);\n            return {\n                ...state,\n                filteredJobs: filteredArray,\n                jobSkillSelection: state.jobSkillSelection.concat(skillFound)\n            }\n\n        case 'GET_NOTIFICATIONS':\n            return {\n                ...state,\n                notifications: action.payload\n            }\n\n        default: return state\n    }\n}\n\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}